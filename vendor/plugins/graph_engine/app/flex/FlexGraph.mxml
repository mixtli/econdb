<?xml version="1.0"?>
<!-- charts/DateTimeAxisSample.mxml -->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" creationComplete="initApp()">
  <mx:Script><![CDATA[
    import mx.charts.*;
    import mx.charts.series.*;
    import mx.charts.chartClasses.*;
    import mx.controls.Alert;
    import mx.charts.HitData;
    import flash.net.URLVariables;
    //import mx.rpc.http.HTTPService;
    import mx.rpc.events.ResultEvent
    import mx.utils.URLUtil;
    import mx.graphics.SolidColor;
    import mx.graphics.Stroke;

    [Bindable]
    public var graph_id:String;

    [Bindable]
    public var graph_title:String;

    [Bindable]
    public var y_label:String = "Dollars";

    [Bindable]
    public var x_label:String = "Date";

    [Bindable]
    public var chart;

    private function initApp():void {
      trace("tracing on");
      graph_id = Application.application.parameters.id;
      graphService.addEventListener("result", createGraph);
      graphService.send();
    }

    private function createGraph(event:ResultEvent):void {
      var result:XML = XML(event.result);
      var x_axis;
      var y_axis;

      chart_panel.title = result.title;
      trace("x_axis_type = " + result.x_axis_type);
      switch(String(result.x_axis_type)) {
        case "Log" :
          x_axis = new LogAxis();
          break;
        case "DateTime" :
          x_axis = new DateTimeAxis();
          break;
        default :
          x_axis = new LinearAxis();
      }
	  
      switch(String(result.y_axis_type)) {
        case 'Log':
          y_axis = new LogAxis();
          break;
        case 'DateTime':
          y_axis = new DateTimeAxis();
          break;
        default:
          y_axis = new LinearAxis();
	  }	  

      y_label = result.y_label;
      x_label = result.x_label;

      switch(String(result.chart_type)) {
        case 'Line':
          chart = new LineChart();
          break;
        case 'Pie':
          chart = new PieChart();
          break;
        case 'Area':
          chart = new AreaChart();
          break;
        case 'Bar':
          chart = new BarChart();
          break;
        default:
          chart = new LineChart();
      }
      chart.setStyle("color", int(result.color));
      chart.setStyle("fill", int(result.fill_color));
      x_axis.title = x_label;
      chart.horizontalAxis = x_axis;
      y_axis.title = y_label;
      chart.verticalAxis = y_axis;
      chart.percentWidth = 100;
      chart.percentHeight = 100; 
      chart.showDataTips = true;
      chart.dataTipFunction = tooltipCallback;
      //chart.height = "100%";
      //chart.width = "100%";      
      chart.id = "chart";
      
      chart_panel.addChild(chart);

      var graph_items:XMLList = XMLList(result.graph_item);
      var stroke:Stroke;
      for each(var item:XML in graph_items) {
          var ls:LineSeries = new LineSeries();
	      var ds:XMLList = XMLList(item.dataset.data);
          ls.dataProvider = ds;
          ls.yField = "y_value";
          ls.xField = "x_value";
          trace("color = " + int(item.color));
          var s:Stroke = new Stroke(int(item.color), 1);
          s.color = int(item.color);
          s.alpha = 1;
          ls.setStyle("lineStroke", s);
          ls.displayName = item.title;
          // chart.series.push(ls);  # for some reason, this doesn't work. wtf?
          var currentSeries:Array = chart.series;
          currentSeries.push(ls);
          chart.series = currentSeries;
       }	
    }
 
    private function tooltipCallback(hd:HitData):String {
      return hd.item.x_value + "\n" + hd.item.y_value;
    }
    private function graphUri():String {
      return URLUtil.objectToString(Application.application.parameters, '&', true);
    }

  ]]></mx:Script>

  <mx:HTTPService id="graphService" url="/graphs/{graph_id}.xml?{graphUri()}" resultFormat="e4x"/>
  
  <mx:Panel width="100%" height="100%" id="chart_panel">
     <mx:Legend dataProvider="{chart}"/>
  </mx:Panel>
</mx:Application>
